---
- name: format block device to be used for Docker storage
  filesystem:
    fstype: xfs
    dev: "{{ docker_storage_device }}"
    opts: -n ftype=1
  when: docker_storage_device is defined
  become: True

- name: ensure /var/lib/docker exists
  file:
    state: directory
    path: "/var/lib/docker"
    mode: 0711
    owner: root
    group: root
  when: docker_storage_device is defined
  become: True

- name: mount filesystem from separate block device under /var/lib/docker
  mount:
    path: "/var/lib/docker"
    src: "{{ docker_storage_device }}"
    fstype: xfs
    state: mounted
  when: docker_storage_device is defined
  become: True

- name: create config for Docker storage setup
  copy:
    content: "STORAGE_DRIVER=overlay"
    dest: "/etc/sysconfig/docker-storage-setup"
  when: docker_storage_device is defined
  become: True

- name: install yum packages
  yum:
    state: installed
    name:
    - docker
    - dstat
    - lsof
    - bash-completion
    - time
    - tmux
    - git
    - python-devel
    - openssl-devel
    - python-pip
    - sysstat
    - iptables-services
  become: True

- name: create docker group
  group:
    name: docker
    state: present
  become: True

- name: add ansible user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  become: True

- name: install docker-py on remote machine
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
  become: True
  with_items:
    - { name: "docker", version: "2.2.1"}
    - { name: "docker-py", version: "1.10.5" }
    - { name: "docker-compose", version: "1.9.0" }

- name: load overlay kernel module for docker
  modprobe:
    name: overlay
    state: present
  become: True

- name: start docker
  service: name=docker state=started enabled=yes
  become: True

- name: upgrade pip so package installs are not broken
  pip:
    name: pip
    state: latest
  become: True

- name: make parent dir
  file:
    path: /srv/gitlab-runner/config/
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    setype: svirt_sandbox_file_t
    mode: 0744
  become: True

- name: make cert dir
  file:
    path: /srv/gitlab-runner/config/certs/
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    setype: svirt_sandbox_file_t
    mode: 0744
  become: True
  when: self_signed_certificate|length > 1


- name: upload self-signed cert
  copy:
    dest: /srv/gitlab-runner/config/certs/ca.crt
    content: "{{ self_signed_cert }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    setype: svirt_sandbox_file_t
    mode: 0744
  become: True
  when: self_signed_certificate|length > 1

- name: set concurrency
  lineinfile:
    path:  /srv/gitlab-runner/config/config.toml
    line: 'concurrent = {{ runner_concurrency }}'
    regexp: '^concurrent ='
    state: present
    insertbefore: 'BOF'
    create: yes
  become: True
  when: runner_concurrency is defined

- include: gitlab_runner_docker.yml
  with_items: "{{ runner_configs }}"
  when:
    - runner_deployment_type == 'docker'

- block:
    - name: create a symlink to /etc/gitlab-runner
      file:
        state: link
        src: /srv/gitlab-runner/config
        dest: /etc/gitlab-runner
      become: True

    - name: install GitLab runner repo
      yum_repository:
        name: runner_gitlab-ci-multi-runner
        description: GitLab multi-runner repo
        baseurl: https://packages.gitlab.com/runner/gitlab-ci-multi-runner/el/7/$basearch
        repo_gpgcheck: no
        gpgcheck: no
        gpgkey: https://packages.gitlab.com/runner/gitlab-ci-multi-runner/gpgkey
      become: True

    - name: install GitLab runner
      yum:
        name: gitlab-ci-multi-runner
        state: present
      become: True

    - include: gitlab_runner_rpm.yml
      with_items: "{{ runner_configs }}"
  when:
    - runner_deployment_type == 'rpm'
